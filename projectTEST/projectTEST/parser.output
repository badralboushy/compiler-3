Grammar

    0 $accept: smallc_program $end

    1 smallc_program: /* empty */
    2               | smallc_program func
    3               | smallc_program var_decl

    4 func: type_specifier ID '(' param_decl_list ')' compound_stmt

    5 type_specifier: INT
    6               | FLOAT
    7               | CHAR
    8               | STRING
    9               | BOOL

   10 param_decl_list: /* empty */
   11                | param_decl
   12                | param_decl_list ',' param_decl

   13 param_decl: type_specifier ID

   14 compound_stmt: '{' compound_stmts '}'

   15 compound_stmts: /* empty */
   16               | compound_stmts var_decl
   17               | compound_stmts stmt

   18 var_decl: type_specifier var_decl_list ';'

   19 var_decl_list: variable_id
   20              | var_decl_list ',' variable_id

   21 variable_id: ID
   22            | ID '=' expr

   23 stmt: compound_stmt
   24     | cond_stmt
   25     | while_stmt
   26     | BREAK ';'
   27     | assignstmt ';'
   28     | CONTINUE ';'
   29     | RETURN expr ';'

   30 cond_stmt: IF '(' expr ')' stmt
   31          | IF '(' expr ')' stmt ELSE stmt

   32 while_stmt: WHILE '(' expr ')' stmt

   33 assignstmt: ID '=' expr

   34 triplecondition: expr '?' expr ':' expr

   35 expr: primary
   36     | expr operator expr
   37     | '!' expr
   38     | '(' expr ')'
   39     | triplecondition
   40     | '-' expr
   41     | ID '(' expr_list ')'

   42 expr_list: /* empty */
   43          | expr
   44          | expr_list SPACECOM expr

   45 operator: '+'
   46         | '-'
   47         | '*'
   48         | '/'
   49         | '<'
   50         | '>'
   51         | '||'
   52         | IS_EQUAL
   53         | '&&'

   54 primary: INTNUM
   55        | FLOATNUM
   56        | CHARCONST
   57        | STRINGCONST
   58        | ID
   59        | TRUE
   60        | FALSE
   61        | NUL


Terminals, with rules where they appear

$end (0) 0
'!' (33) 37
'&&' (38) 53
'(' (40) 4 30 31 32 38 41
')' (41) 4 30 31 32 38 41
'*' (42) 47
'+' (43) 45
',' (44) 12 20
'-' (45) 40 46
'/' (47) 48
':' (58) 34
';' (59) 18 26 27 28 29
'<' (60) 49
'=' (61) 22 33
'>' (62) 50
'?' (63) 34
'{' (123) 14
'||' (124) 51
'}' (125) 14
error (256)
ID (258) 4 13 21 22 33 41 58
INT (259) 5
FLOAT (260) 6
CHAR (261) 7
STRING (262) 8
BOOL (263) 9
RETURN (264) 29
BREAK (265) 26
CONTINUE (266) 28
WHILE (267) 32
IF (268) 30 31
ELSE (269) 31
INTNUM (270) 54
FLOATNUM (271) 55
CHARCONST (272) 56
STRINGCONST (273) 57
TRUE (274) 59
FALSE (275) 60
NUL (276) 61
IS_EQUAL (277) 52
SPACECOM (278) 44
IF_PREC (279)
OP (280)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
smallc_program (45)
    on left: 1 2 3, on right: 0 2 3
func (46)
    on left: 4, on right: 2
type_specifier (47)
    on left: 5 6 7 8 9, on right: 4 13 18
param_decl_list (48)
    on left: 10 11 12, on right: 4 12
param_decl (49)
    on left: 13, on right: 11 12
compound_stmt (50)
    on left: 14, on right: 4 23
compound_stmts (51)
    on left: 15 16 17, on right: 14 16 17
var_decl (52)
    on left: 18, on right: 3 16
var_decl_list (53)
    on left: 19 20, on right: 18 20
variable_id (54)
    on left: 21 22, on right: 19 20
stmt (55)
    on left: 23 24 25 26 27 28 29, on right: 17 30 31 32
cond_stmt (56)
    on left: 30 31, on right: 24
while_stmt (57)
    on left: 32, on right: 25
assignstmt (58)
    on left: 33, on right: 27
triplecondition (59)
    on left: 34, on right: 39
expr (60)
    on left: 35 36 37 38 39 40 41, on right: 22 29 30 31 32 33 34 36
    37 38 40 43 44
expr_list (61)
    on left: 42 43 44, on right: 41 44
operator (62)
    on left: 45 46 47 48 49 50 51 52 53, on right: 36
primary (63)
    on left: 54 55 56 57 58 59 60 61, on right: 35


state 0

    0 $accept: . smallc_program $end

    $default  reduce using rule 1 (smallc_program)

    smallc_program  go to state 1


state 1

    0 $accept: smallc_program . $end
    2 smallc_program: smallc_program . func
    3               | smallc_program . var_decl

    $end    shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    CHAR    shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    func            go to state 8
    type_specifier  go to state 9
    var_decl        go to state 10


state 2

    0 $accept: smallc_program $end .

    $default  accept


state 3

    5 type_specifier: INT .

    $default  reduce using rule 5 (type_specifier)


state 4

    6 type_specifier: FLOAT .

    $default  reduce using rule 6 (type_specifier)


state 5

    7 type_specifier: CHAR .

    $default  reduce using rule 7 (type_specifier)


state 6

    8 type_specifier: STRING .

    $default  reduce using rule 8 (type_specifier)


state 7

    9 type_specifier: BOOL .

    $default  reduce using rule 9 (type_specifier)


state 8

    2 smallc_program: smallc_program func .

    $default  reduce using rule 2 (smallc_program)


state 9

    4 func: type_specifier . ID '(' param_decl_list ')' compound_stmt
   18 var_decl: type_specifier . var_decl_list ';'

    ID  shift, and go to state 11

    var_decl_list  go to state 12
    variable_id    go to state 13


state 10

    3 smallc_program: smallc_program var_decl .

    $default  reduce using rule 3 (smallc_program)


state 11

    4 func: type_specifier ID . '(' param_decl_list ')' compound_stmt
   21 variable_id: ID .
   22            | ID . '=' expr

    '='  shift, and go to state 14
    '('  shift, and go to state 15

    $default  reduce using rule 21 (variable_id)


state 12

   18 var_decl: type_specifier var_decl_list . ';'
   20 var_decl_list: var_decl_list . ',' variable_id

    ','  shift, and go to state 16
    ';'  shift, and go to state 17


state 13

   19 var_decl_list: variable_id .

    $default  reduce using rule 19 (var_decl_list)


state 14

   22 variable_id: ID '=' . expr

    ID           shift, and go to state 18
    INTNUM       shift, and go to state 19
    FLOATNUM     shift, and go to state 20
    CHARCONST    shift, and go to state 21
    STRINGCONST  shift, and go to state 22
    TRUE         shift, and go to state 23
    FALSE        shift, and go to state 24
    NUL          shift, and go to state 25
    '!'          shift, and go to state 26
    '-'          shift, and go to state 27
    '('          shift, and go to state 28

    triplecondition  go to state 29
    expr             go to state 30
    primary          go to state 31


state 15

    4 func: type_specifier ID '(' . param_decl_list ')' compound_stmt

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    CHAR    shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    $default  reduce using rule 10 (param_decl_list)

    type_specifier   go to state 32
    param_decl_list  go to state 33
    param_decl       go to state 34


state 16

   20 var_decl_list: var_decl_list ',' . variable_id

    ID  shift, and go to state 35

    variable_id  go to state 36


state 17

   18 var_decl: type_specifier var_decl_list ';' .

    $default  reduce using rule 18 (var_decl)


state 18

   41 expr: ID . '(' expr_list ')'
   58 primary: ID .

    '('  shift, and go to state 37

    $default  reduce using rule 58 (primary)


state 19

   54 primary: INTNUM .

    $default  reduce using rule 54 (primary)


state 20

   55 primary: FLOATNUM .

    $default  reduce using rule 55 (primary)


state 21

   56 primary: CHARCONST .

    $default  reduce using rule 56 (primary)


state 22

   57 primary: STRINGCONST .

    $default  reduce using rule 57 (primary)


state 23

   59 primary: TRUE .

    $default  reduce using rule 59 (primary)


state 24

   60 primary: FALSE .

    $default  reduce using rule 60 (primary)


state 25

   61 primary: NUL .

    $default  reduce using rule 61 (primary)


state 26

   37 expr: '!' . expr

    ID           shift, and go to state 18
    INTNUM       shift, and go to state 19
    FLOATNUM     shift, and go to state 20
    CHARCONST    shift, and go to state 21
    STRINGCONST  shift, and go to state 22
    TRUE         shift, and go to state 23
    FALSE        shift, and go to state 24
    NUL          shift, and go to state 25
    '!'          shift, and go to state 26
    '-'          shift, and go to state 27
    '('          shift, and go to state 28

    triplecondition  go to state 29
    expr             go to state 38
    primary          go to state 31


state 27

   40 expr: '-' . expr

    ID           shift, and go to state 18
    INTNUM       shift, and go to state 19
    FLOATNUM     shift, and go to state 20
    CHARCONST    shift, and go to state 21
    STRINGCONST  shift, and go to state 22
    TRUE         shift, and go to state 23
    FALSE        shift, and go to state 24
    NUL          shift, and go to state 25
    '!'          shift, and go to state 26
    '-'          shift, and go to state 27
    '('          shift, and go to state 28

    triplecondition  go to state 29
    expr             go to state 39
    primary          go to state 31


state 28

   38 expr: '(' . expr ')'

    ID           shift, and go to state 18
    INTNUM       shift, and go to state 19
    FLOATNUM     shift, and go to state 20
    CHARCONST    shift, and go to state 21
    STRINGCONST  shift, and go to state 22
    TRUE         shift, and go to state 23
    FALSE        shift, and go to state 24
    NUL          shift, and go to state 25
    '!'          shift, and go to state 26
    '-'          shift, and go to state 27
    '('          shift, and go to state 28

    triplecondition  go to state 29
    expr             go to state 40
    primary          go to state 31


state 29

   39 expr: triplecondition .

    $default  reduce using rule 39 (expr)


state 30

   22 variable_id: ID '=' expr .
   34 triplecondition: expr . '?' expr ':' expr
   36 expr: expr . operator expr

    IS_EQUAL  shift, and go to state 41
    '<'       shift, and go to state 42
    '>'       shift, and go to state 43
    '&&'      shift, and go to state 44
    '||'      shift, and go to state 45
    '+'       shift, and go to state 46
    '-'       shift, and go to state 47
    '*'       shift, and go to state 48
    '/'       shift, and go to state 49
    '?'       shift, and go to state 50

    $default  reduce using rule 22 (variable_id)

    operator  go to state 51


state 31

   35 expr: primary .

    $default  reduce using rule 35 (expr)


state 32

   13 param_decl: type_specifier . ID

    ID  shift, and go to state 52


state 33

    4 func: type_specifier ID '(' param_decl_list . ')' compound_stmt
   12 param_decl_list: param_decl_list . ',' param_decl

    ')'  shift, and go to state 53
    ','  shift, and go to state 54


state 34

   11 param_decl_list: param_decl .

    $default  reduce using rule 11 (param_decl_list)


state 35

   21 variable_id: ID .
   22            | ID . '=' expr

    '='  shift, and go to state 14

    $default  reduce using rule 21 (variable_id)


state 36

   20 var_decl_list: var_decl_list ',' variable_id .

    $default  reduce using rule 20 (var_decl_list)


state 37

   41 expr: ID '(' . expr_list ')'

    ID           shift, and go to state 18
    INTNUM       shift, and go to state 19
    FLOATNUM     shift, and go to state 20
    CHARCONST    shift, and go to state 21
    STRINGCONST  shift, and go to state 22
    TRUE         shift, and go to state 23
    FALSE        shift, and go to state 24
    NUL          shift, and go to state 25
    '!'          shift, and go to state 26
    '-'          shift, and go to state 27
    '('          shift, and go to state 28

    $default  reduce using rule 42 (expr_list)

    triplecondition  go to state 29
    expr             go to state 55
    expr_list        go to state 56
    primary          go to state 31


state 38

   34 triplecondition: expr . '?' expr ':' expr
   36 expr: expr . operator expr
   37     | '!' expr .

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '?'  shift, and go to state 50

    $default  reduce using rule 37 (expr)

    operator  go to state 51


state 39

   34 triplecondition: expr . '?' expr ':' expr
   36 expr: expr . operator expr
   40     | '-' expr .

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '?'  shift, and go to state 50

    $default  reduce using rule 40 (expr)

    operator  go to state 51


state 40

   34 triplecondition: expr . '?' expr ':' expr
   36 expr: expr . operator expr
   38     | '(' expr . ')'

    IS_EQUAL  shift, and go to state 41
    '<'       shift, and go to state 42
    '>'       shift, and go to state 43
    '&&'      shift, and go to state 44
    '||'      shift, and go to state 45
    '+'       shift, and go to state 46
    '-'       shift, and go to state 47
    '*'       shift, and go to state 48
    '/'       shift, and go to state 49
    ')'       shift, and go to state 57
    '?'       shift, and go to state 50

    operator  go to state 51


state 41

   52 operator: IS_EQUAL .

    $default  reduce using rule 52 (operator)


state 42

   49 operator: '<' .

    $default  reduce using rule 49 (operator)


state 43

   50 operator: '>' .

    $default  reduce using rule 50 (operator)


state 44

   53 operator: '&&' .

    $default  reduce using rule 53 (operator)


state 45

   51 operator: '||' .

    $default  reduce using rule 51 (operator)


state 46

   45 operator: '+' .

    $default  reduce using rule 45 (operator)


state 47

   46 operator: '-' .

    $default  reduce using rule 46 (operator)


state 48

   47 operator: '*' .

    $default  reduce using rule 47 (operator)


state 49

   48 operator: '/' .

    $default  reduce using rule 48 (operator)


state 50

   34 triplecondition: expr '?' . expr ':' expr

    ID           shift, and go to state 18
    INTNUM       shift, and go to state 19
    FLOATNUM     shift, and go to state 20
    CHARCONST    shift, and go to state 21
    STRINGCONST  shift, and go to state 22
    TRUE         shift, and go to state 23
    FALSE        shift, and go to state 24
    NUL          shift, and go to state 25
    '!'          shift, and go to state 26
    '-'          shift, and go to state 27
    '('          shift, and go to state 28

    triplecondition  go to state 29
    expr             go to state 58
    primary          go to state 31


state 51

   36 expr: expr operator . expr

    ID           shift, and go to state 18
    INTNUM       shift, and go to state 19
    FLOATNUM     shift, and go to state 20
    CHARCONST    shift, and go to state 21
    STRINGCONST  shift, and go to state 22
    TRUE         shift, and go to state 23
    FALSE        shift, and go to state 24
    NUL          shift, and go to state 25
    '!'          shift, and go to state 26
    '-'          shift, and go to state 27
    '('          shift, and go to state 28

    triplecondition  go to state 29
    expr             go to state 59
    primary          go to state 31


state 52

   13 param_decl: type_specifier ID .

    $default  reduce using rule 13 (param_decl)


state 53

    4 func: type_specifier ID '(' param_decl_list ')' . compound_stmt

    '{'  shift, and go to state 60

    compound_stmt  go to state 61


state 54

   12 param_decl_list: param_decl_list ',' . param_decl

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    CHAR    shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    type_specifier  go to state 32
    param_decl      go to state 62


state 55

   34 triplecondition: expr . '?' expr ':' expr
   36 expr: expr . operator expr
   43 expr_list: expr .

    IS_EQUAL  shift, and go to state 41
    '<'       shift, and go to state 42
    '>'       shift, and go to state 43
    '&&'      shift, and go to state 44
    '||'      shift, and go to state 45
    '+'       shift, and go to state 46
    '-'       shift, and go to state 47
    '*'       shift, and go to state 48
    '/'       shift, and go to state 49
    '?'       shift, and go to state 50

    $default  reduce using rule 43 (expr_list)

    operator  go to state 51


state 56

   41 expr: ID '(' expr_list . ')'
   44 expr_list: expr_list . SPACECOM expr

    SPACECOM  shift, and go to state 63
    ')'       shift, and go to state 64


state 57

   38 expr: '(' expr ')' .

    $default  reduce using rule 38 (expr)


state 58

   34 triplecondition: expr . '?' expr ':' expr
   34                | expr '?' expr . ':' expr
   36 expr: expr . operator expr

    IS_EQUAL  shift, and go to state 41
    '<'       shift, and go to state 42
    '>'       shift, and go to state 43
    '&&'      shift, and go to state 44
    '||'      shift, and go to state 45
    '+'       shift, and go to state 46
    '-'       shift, and go to state 47
    '*'       shift, and go to state 48
    '/'       shift, and go to state 49
    ':'       shift, and go to state 65
    '?'       shift, and go to state 50

    operator  go to state 51


state 59

   34 triplecondition: expr . '?' expr ':' expr
   36 expr: expr . operator expr
   36     | expr operator expr .

    '?'  shift, and go to state 50

    $default  reduce using rule 36 (expr)

    operator  go to state 51


state 60

   14 compound_stmt: '{' . compound_stmts '}'

    $default  reduce using rule 15 (compound_stmts)

    compound_stmts  go to state 66


state 61

    4 func: type_specifier ID '(' param_decl_list ')' compound_stmt .

    $default  reduce using rule 4 (func)


state 62

   12 param_decl_list: param_decl_list ',' param_decl .

    $default  reduce using rule 12 (param_decl_list)


state 63

   44 expr_list: expr_list SPACECOM . expr

    ID           shift, and go to state 18
    INTNUM       shift, and go to state 19
    FLOATNUM     shift, and go to state 20
    CHARCONST    shift, and go to state 21
    STRINGCONST  shift, and go to state 22
    TRUE         shift, and go to state 23
    FALSE        shift, and go to state 24
    NUL          shift, and go to state 25
    '!'          shift, and go to state 26
    '-'          shift, and go to state 27
    '('          shift, and go to state 28

    triplecondition  go to state 29
    expr             go to state 67
    primary          go to state 31


state 64

   41 expr: ID '(' expr_list ')' .

    $default  reduce using rule 41 (expr)


state 65

   34 triplecondition: expr '?' expr ':' . expr

    ID           shift, and go to state 18
    INTNUM       shift, and go to state 19
    FLOATNUM     shift, and go to state 20
    CHARCONST    shift, and go to state 21
    STRINGCONST  shift, and go to state 22
    TRUE         shift, and go to state 23
    FALSE        shift, and go to state 24
    NUL          shift, and go to state 25
    '!'          shift, and go to state 26
    '-'          shift, and go to state 27
    '('          shift, and go to state 28

    triplecondition  go to state 29
    expr             go to state 68
    primary          go to state 31


state 66

   14 compound_stmt: '{' compound_stmts . '}'
   16 compound_stmts: compound_stmts . var_decl
   17               | compound_stmts . stmt

    ID        shift, and go to state 69
    INT       shift, and go to state 3
    FLOAT     shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    BOOL      shift, and go to state 7
    RETURN    shift, and go to state 70
    BREAK     shift, and go to state 71
    CONTINUE  shift, and go to state 72
    WHILE     shift, and go to state 73
    IF        shift, and go to state 74
    '{'       shift, and go to state 60
    '}'       shift, and go to state 75

    type_specifier  go to state 76
    compound_stmt   go to state 77
    var_decl        go to state 78
    stmt            go to state 79
    cond_stmt       go to state 80
    while_stmt      go to state 81
    assignstmt      go to state 82


state 67

   34 triplecondition: expr . '?' expr ':' expr
   36 expr: expr . operator expr
   44 expr_list: expr_list SPACECOM expr .

    IS_EQUAL  shift, and go to state 41
    '<'       shift, and go to state 42
    '>'       shift, and go to state 43
    '&&'      shift, and go to state 44
    '||'      shift, and go to state 45
    '+'       shift, and go to state 46
    '-'       shift, and go to state 47
    '*'       shift, and go to state 48
    '/'       shift, and go to state 49
    '?'       shift, and go to state 50

    $default  reduce using rule 44 (expr_list)

    operator  go to state 51


state 68

   34 triplecondition: expr . '?' expr ':' expr
   34                | expr '?' expr ':' expr .
   36 expr: expr . operator expr

    '?'  shift, and go to state 50

    $default  reduce using rule 34 (triplecondition)

    operator  go to state 51


state 69

   33 assignstmt: ID . '=' expr

    '='  shift, and go to state 83


state 70

   29 stmt: RETURN . expr ';'

    ID           shift, and go to state 18
    INTNUM       shift, and go to state 19
    FLOATNUM     shift, and go to state 20
    CHARCONST    shift, and go to state 21
    STRINGCONST  shift, and go to state 22
    TRUE         shift, and go to state 23
    FALSE        shift, and go to state 24
    NUL          shift, and go to state 25
    '!'          shift, and go to state 26
    '-'          shift, and go to state 27
    '('          shift, and go to state 28

    triplecondition  go to state 29
    expr             go to state 84
    primary          go to state 31


state 71

   26 stmt: BREAK . ';'

    ';'  shift, and go to state 85


state 72

   28 stmt: CONTINUE . ';'

    ';'  shift, and go to state 86


state 73

   32 while_stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 87


state 74

   30 cond_stmt: IF . '(' expr ')' stmt
   31          | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 88


state 75

   14 compound_stmt: '{' compound_stmts '}' .

    $default  reduce using rule 14 (compound_stmt)


state 76

   18 var_decl: type_specifier . var_decl_list ';'

    ID  shift, and go to state 35

    var_decl_list  go to state 12
    variable_id    go to state 13


state 77

   23 stmt: compound_stmt .

    $default  reduce using rule 23 (stmt)


state 78

   16 compound_stmts: compound_stmts var_decl .

    $default  reduce using rule 16 (compound_stmts)


state 79

   17 compound_stmts: compound_stmts stmt .

    $default  reduce using rule 17 (compound_stmts)


state 80

   24 stmt: cond_stmt .

    $default  reduce using rule 24 (stmt)


state 81

   25 stmt: while_stmt .

    $default  reduce using rule 25 (stmt)


state 82

   27 stmt: assignstmt . ';'

    ';'  shift, and go to state 89


state 83

   33 assignstmt: ID '=' . expr

    ID           shift, and go to state 18
    INTNUM       shift, and go to state 19
    FLOATNUM     shift, and go to state 20
    CHARCONST    shift, and go to state 21
    STRINGCONST  shift, and go to state 22
    TRUE         shift, and go to state 23
    FALSE        shift, and go to state 24
    NUL          shift, and go to state 25
    '!'          shift, and go to state 26
    '-'          shift, and go to state 27
    '('          shift, and go to state 28

    triplecondition  go to state 29
    expr             go to state 90
    primary          go to state 31


state 84

   29 stmt: RETURN expr . ';'
   34 triplecondition: expr . '?' expr ':' expr
   36 expr: expr . operator expr

    IS_EQUAL  shift, and go to state 41
    '<'       shift, and go to state 42
    '>'       shift, and go to state 43
    '&&'      shift, and go to state 44
    '||'      shift, and go to state 45
    '+'       shift, and go to state 46
    '-'       shift, and go to state 47
    '*'       shift, and go to state 48
    '/'       shift, and go to state 49
    '?'       shift, and go to state 50
    ';'       shift, and go to state 91

    operator  go to state 51


state 85

   26 stmt: BREAK ';' .

    $default  reduce using rule 26 (stmt)


state 86

   28 stmt: CONTINUE ';' .

    $default  reduce using rule 28 (stmt)


state 87

   32 while_stmt: WHILE '(' . expr ')' stmt

    ID           shift, and go to state 18
    INTNUM       shift, and go to state 19
    FLOATNUM     shift, and go to state 20
    CHARCONST    shift, and go to state 21
    STRINGCONST  shift, and go to state 22
    TRUE         shift, and go to state 23
    FALSE        shift, and go to state 24
    NUL          shift, and go to state 25
    '!'          shift, and go to state 26
    '-'          shift, and go to state 27
    '('          shift, and go to state 28

    triplecondition  go to state 29
    expr             go to state 92
    primary          go to state 31


state 88

   30 cond_stmt: IF '(' . expr ')' stmt
   31          | IF '(' . expr ')' stmt ELSE stmt

    ID           shift, and go to state 18
    INTNUM       shift, and go to state 19
    FLOATNUM     shift, and go to state 20
    CHARCONST    shift, and go to state 21
    STRINGCONST  shift, and go to state 22
    TRUE         shift, and go to state 23
    FALSE        shift, and go to state 24
    NUL          shift, and go to state 25
    '!'          shift, and go to state 26
    '-'          shift, and go to state 27
    '('          shift, and go to state 28

    triplecondition  go to state 29
    expr             go to state 93
    primary          go to state 31


state 89

   27 stmt: assignstmt ';' .

    $default  reduce using rule 27 (stmt)


state 90

   33 assignstmt: ID '=' expr .
   34 triplecondition: expr . '?' expr ':' expr
   36 expr: expr . operator expr

    IS_EQUAL  shift, and go to state 41
    '<'       shift, and go to state 42
    '>'       shift, and go to state 43
    '&&'      shift, and go to state 44
    '||'      shift, and go to state 45
    '+'       shift, and go to state 46
    '-'       shift, and go to state 47
    '*'       shift, and go to state 48
    '/'       shift, and go to state 49
    '?'       shift, and go to state 50

    $default  reduce using rule 33 (assignstmt)

    operator  go to state 51


state 91

   29 stmt: RETURN expr ';' .

    $default  reduce using rule 29 (stmt)


state 92

   32 while_stmt: WHILE '(' expr . ')' stmt
   34 triplecondition: expr . '?' expr ':' expr
   36 expr: expr . operator expr

    IS_EQUAL  shift, and go to state 41
    '<'       shift, and go to state 42
    '>'       shift, and go to state 43
    '&&'      shift, and go to state 44
    '||'      shift, and go to state 45
    '+'       shift, and go to state 46
    '-'       shift, and go to state 47
    '*'       shift, and go to state 48
    '/'       shift, and go to state 49
    ')'       shift, and go to state 94
    '?'       shift, and go to state 50

    operator  go to state 51


state 93

   30 cond_stmt: IF '(' expr . ')' stmt
   31          | IF '(' expr . ')' stmt ELSE stmt
   34 triplecondition: expr . '?' expr ':' expr
   36 expr: expr . operator expr

    IS_EQUAL  shift, and go to state 41
    '<'       shift, and go to state 42
    '>'       shift, and go to state 43
    '&&'      shift, and go to state 44
    '||'      shift, and go to state 45
    '+'       shift, and go to state 46
    '-'       shift, and go to state 47
    '*'       shift, and go to state 48
    '/'       shift, and go to state 49
    ')'       shift, and go to state 95
    '?'       shift, and go to state 50

    operator  go to state 51


state 94

   32 while_stmt: WHILE '(' expr ')' . stmt

    ID        shift, and go to state 69
    RETURN    shift, and go to state 70
    BREAK     shift, and go to state 71
    CONTINUE  shift, and go to state 72
    WHILE     shift, and go to state 73
    IF        shift, and go to state 74
    '{'       shift, and go to state 60

    compound_stmt  go to state 77
    stmt           go to state 96
    cond_stmt      go to state 80
    while_stmt     go to state 81
    assignstmt     go to state 82


state 95

   30 cond_stmt: IF '(' expr ')' . stmt
   31          | IF '(' expr ')' . stmt ELSE stmt

    ID        shift, and go to state 69
    RETURN    shift, and go to state 70
    BREAK     shift, and go to state 71
    CONTINUE  shift, and go to state 72
    WHILE     shift, and go to state 73
    IF        shift, and go to state 74
    '{'       shift, and go to state 60

    compound_stmt  go to state 77
    stmt           go to state 97
    cond_stmt      go to state 80
    while_stmt     go to state 81
    assignstmt     go to state 82


state 96

   32 while_stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 32 (while_stmt)


state 97

   30 cond_stmt: IF '(' expr ')' stmt .
   31          | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 98

    $default  reduce using rule 30 (cond_stmt)


state 98

   31 cond_stmt: IF '(' expr ')' stmt ELSE . stmt

    ID        shift, and go to state 69
    RETURN    shift, and go to state 70
    BREAK     shift, and go to state 71
    CONTINUE  shift, and go to state 72
    WHILE     shift, and go to state 73
    IF        shift, and go to state 74
    '{'       shift, and go to state 60

    compound_stmt  go to state 77
    stmt           go to state 99
    cond_stmt      go to state 80
    while_stmt     go to state 81
    assignstmt     go to state 82


state 99

   31 cond_stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 31 (cond_stmt)
